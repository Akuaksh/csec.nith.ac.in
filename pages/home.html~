<!--home page-->
<!-- Initially written by Rohan Jaswal and Rahul Raturi-->
<!-- ©CSEC-NITH-->
<HTML>
<head>
	<title>Homepage</title>
	<link rel="stylesheet" type="text/css" href="/css/main.css"/>
	<link rel="stylesheet" type="text/css" href="/css/content.css"/>
	
</head>
<body>
	<div class="header">
		<h1>Welcome!</h1>
		
	</div>
	<hr>
	<div class ="article">
		<div class="text">
		<p>
		<div class="image">
			<img src="/images/images.jpeg" />
		</div>
		Welcome to the new website of Computer Science Engineers 
		community of National Institute of Technology, Hamirpur. Compared to SVN, the git init command is an incredibly easy way to create new version-controlled projects. Git doesn’t require you to create a repository, import files, and check out a working copy. All you have to do is cd into your project folder and run git init, and you’ll have a fully functional Git repository.

However, for most projects, git init only needs to be executed once to create a central repository—developers typically don‘t use git init to create their local repositories. Instead, they’ll usually use git clone to copy an existing repository onto their local machine.
Bare Repositories

The --bare flag creates a repository that doesn’t have a working directory, making it impossible to edit files and commit changes in that repository. Central repositories should always be created as bare repositories because pushing branches to a non-bare repository has the potential to overwrite changes. Think of --bare as a way to mark a repository as a storage facility, opposed to a development environment. This means that for virtually all Git workflows, the central repository is bare, and developers local repositories are non-bare.
		</p>
		
		</div>
		
	</div>
	<div class ="article">
		<p>
			<center>
			<h3>Notice</h3>
			This website is under construction. Please see after sometime and bear with us.</center> 
		</p>
	</div>
	
	
</body>
</HTML>

